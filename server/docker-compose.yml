version: '2'
services:
  db-users:
    container_name: db-users
    restart: always
    build:
      context: ./databases/users
      dockerfile: mysql.dockerfile
    ports:
      - '3301:3306'

  db-fighters-ranking:
    container_name: db-fighters-ranking
    restart: always
    build:
      context: ./databases/fighters-ranking
      dockerfile: mongo.dockerfile
    ports:
      - '3308:27017'
    environment:
      MONGO_INITDB_DATABASE: ranking

  db-products:
    container_name: db-products
    restart: always
    build:
      context: ./databases/products
      dockerfile: mysql.dockerfile
    ports:
      - '3303:3306'
    volumes:
      - ./databases/products/custom.cnf:/etc/mysql/conf.d/custom.cnf

  app-users:
    container_name: app-users
    restart: always
    build:
      context: ./RestUser
      dockerfile: Dockerfile
    ports:
      - '9997:9997'
    depends_on:
      - db-users

  app-products:
    container_name: app-products
    restart: always
    build:
      context: ./RestProduct
      dockerfile: Dockerfile
    ports:
      - '9998:9998'
    depends_on:
      - db-products

  app-ranking:
    container_name: app-ranking
    restart: always
    build:
      context: ./Ranking
      dockerfile: Dockerfile
    ports:
      - '9996:80'
    depends_on:
      - db-fighters-ranking

  app-simulator:
    container_name: app-simulator
    restart: always
    build:
      context: ./Simulator
      dockerfile: Dockerfile
    ports:
      - '9995:80'
    depends_on:
      - db-fighters-ranking

  app-auth:
    container_name: app-auth
    restart: always
    build:
      context: ./rest-auth
      dockerfile: Dockerfile
    ports:
      - '9999:9999'

  app-gateway:
    container_name: app-gateway
    restart: always
    build:
      context: ./rest-gateway
      dockerfile: Dockerfile
    ports:
      - '9990:9990'
